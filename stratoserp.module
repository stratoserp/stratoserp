<?php

declare(strict_types=1);

/**
 * @file
 * Core functions for StratosERP module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Url;
use Drupal\stratoserp\Constants;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_help().
 *
 * @param string $route_name
 * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
 *
 * @return \Drupal\Core\StringTranslation\TranslatableMarkup|NULL
 */
function stratoserp_help(string $route_name, RouteMatchInterface $route_match): ?TranslatableMarkup {
  if ($route_name === 'stratoserp_main') {
    return t('Main console page.');
  }
  return NULL;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param string $form_id
 *
 * @return NULL
 */
function stratoserp_form_user_login_form_alter(array &$form, FormStateInterface $form_state, string $form_id) {
  // Alter login form and add own custom submit handler.
  $form['#submit'][] = '_stratoserp_user_login_form_submit';

  return NULL;
}

/**
 * Custom submit handler for login form.
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *
 * @return NULL;
 */
function _stratoserp_user_login_form_submit(array &$form, FormStateInterface $form_state) {
  $form_state->setRedirect('<front>');

  return NULL;
}

/**
 * I don't think we're using this.
 *
 * @return array
 */
function stratoserp_theme(): array {
  return [
    'stratoserp_admin_page' => [
      'variables' => [
        'counters' => [],
        'general_info' => [],
        'requirements' => NULL,
      ],
    ],
  ];
}

/**
 * Modify field types for which remove button will be added.
 * See multiple_fields_remove_button.api.php.
 *
 * @param array $fieldTypes
 *   A list with field types.
 *
 * @return NULL;
 */
function stratoserp_multiple_field_remove_button_field_types_alter(array &$fieldTypes) {
  $fieldTypes[] = 'se_item_line';
  $fieldTypes[] = 'se_payment_line';

  return NULL;
}

/**
 * Implements hook_toolbar_alter().
 *
 * See: https://www.drupal.org/project/toolbar_menu/issues/2658470
 *
 * @param array $items
 *
 * @return NULL;
 */
function stratoserp_toolbar_alter(array &$items) {
  $account = Drupal::currentUser();
  if (!in_array('administrator', $account->getRoles(), TRUE)) {
    unset($items['administration']);
  }

  return NULL;
}
