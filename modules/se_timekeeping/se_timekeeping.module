<?php

declare(strict_types=1);

/**
 * @file
 */

use Drupal\comment\CommentInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_form_alter().
 *
 * Perform alterations so that the form is nicer.
 *
 * @todo This is doing things weirdly.
 */
function se_timekeeping_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'comment_se_timekeeping_form') {

    // If the business ref is not set, try and Retrieve the entity
    // the comment is being attached to.
    /** @var \Drupal\se_ticket\Entity\Ticket $ticket */
    if (empty($form['se_bu_ref']['widget'][0]['target_id']['#default_value'])
    && $ticket = $form_state->getFormObject()->getEntity()->getCommentedEntity()) {
      $form['se_bu_ref']['widget'][0]['target_id']['#default_value'] =
        \Drupal::service('se_business.service')->lookupBusiness($ticket);
    }

    // If the subject is not set, set one.
    // @todo this truncate is icky.
    if (isset($ticket) && empty($form['subject']['widget'][0]['value']['#default_value'])) {
      // Set the default subject to the title of the node.
      $date = new DrupalDateTime();
      $form['subject']['widget'][0]['value']['#default_value'] =
        t('@title - @user - @now', [
          '@title' => mb_strimwidth($ticket->name->value, 0, 20) . '...',
          '@user' => mb_strimwidth(\Drupal::currentUser()->getAccountName(), 0, 20) . '...',
          '@now' => \Drupal::service('date.formatter')->format($date->getTimestamp(), 'short', '', NULL),
        ]);
    }

    // Now hide the fields.
    $form['se_bu_ref']['widget']['#access'] = FALSE;
    $form['subject']['widget']['#access'] = FALSE;
  }
}

/**
 * Following code originally from the flat_comments module.
 */

/**
 * Implementation of hook_comment_presave().
 */
function se_timekeeping_comment_presave(CommentInterface $comment) {
  // Make sure the comment is real.
  if (!$entity = $comment->getCommentedEntity()) {
    return;
  }

  // Only alter comments on tickets.
  if (!isset($entity) || $entity->bundle() !== 'se_ticket') {
    return;
  }

  // Only affect new comments and comments set to be displayed flat.
  if (!$comment->id()) {
    // Set parent id to NULL to prevent threads.
    $comment->get('pid')->setValue(NULL);
  }
}

/**
 * Implements hook_comments_links_alter().
 */
function se_timekeeping_comment_links_alter(array &$links, CommentInterface $entity, array &$context) {
  // If there is not a "reply" link, no need to continue.
  if (!isset($links['comment']['#links']['comment-reply'])) {
    return;
  }

  unset($links['comment']['#links']['comment-reply']);
}

/**
 * Implements hook_theme().
 */
function se_timekeeping_theme() {
  $theme = [];

  $theme['se_timekeeping'] = [
    'render element' => 'elements',
    'file' => 'se_timekeeping.page.inc',
    'template' => 'se_timekeeping',
  ];

  return $theme;
}
